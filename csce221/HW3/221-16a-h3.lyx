#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 0.8in
\rightmargin 1in
\bottommargin 0.8in
\headheight 0cm
\headsep 0cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CSCE 221 Cover Page
\begin_inset Newline newline
\end_inset

 Homework Assignment #3 
\begin_inset Newline newline
\end_inset

Due April 26 to CSNet
\end_layout

\begin_layout Author
First Name
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Chris
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Comeaux
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN 622006681
\end_layout

\begin_layout Date
User Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

cmc236
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

cmc236@tamu.edu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
\align left
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more Aggie Honor System Office 
\begin_inset CommandInset href
LatexCommand href
target "http://aggiehonor.tamu.edu/"

\end_inset


\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
www.chegg.com
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data Structures and Algorithms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
in c++ by Goodrich, Tamassia, and Mount
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Date
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
\align left
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Quotation
\align left
“On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work.” 
\end_layout

\begin_layout Date
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Chris
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Comeaux
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

4/25/2016
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\align left

\series bold
Homework 3
\end_layout

\begin_layout Standard
\align left

\series bold
due April 26 
\end_layout

\begin_layout Enumerate
\align left
(10 points) R-9.10 p.
 417 
\end_layout

\begin_deeper
\begin_layout Standard
\align left
What is the result of Exercise R-9.7, when collisions are handled by double
 hashing using the secondary hash function 
\begin_inset Formula $h_{s}(k)=7-(k$
\end_inset

 mod 7)?
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename 1.png
	scale 70

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\align left
(10 points) R-8.2 p.
 361
\end_layout

\begin_deeper
\begin_layout Standard
\align left
How long would it take toremove 
\begin_inset Formula $\left\lceil log\,n\right\rceil $
\end_inset

 smallest elements from a heap that contains 
\begin_inset Formula $n$
\end_inset

 entries using the 
\family typewriter
removeMin()
\family default
 operation?
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left
The remiveMin function takes 
\begin_inset Formula $log_{2}n$
\end_inset

.
 For a heap with n elements, to remove the smallest 
\begin_inset Formula $log\,n$
\end_inset

 elements, with the removeMin function it would take 
\begin_inset Formula $O(log_{2}(log_{2}n)).$
\end_inset


\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\align left
(10 points) R-8.7 p.
 361
\end_layout

\begin_deeper
\begin_layout Standard
\align left
An airport is developing a computer simulation of air-traffic control that
 handles events such as landings and takeoffs.
 Each event has a 
\emph on
time-stamp 
\emph default
that denotes the time when the event occurs.
 The simulation program needs to efficiently perform the following two fundament
al operations:
\end_layout

\begin_layout Itemize
\align left
Insert an event with a given time-stamp (that is, add a future event)
\end_layout

\begin_layout Itemize
\align left
Extract the event with smallest time-stamp (that is, determine the next
 event to process)
\end_layout

\begin_layout Standard
\align left
Which data structure should be used for the above operations? Why?
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left
A priority queue implemented with a binary hap would be best because it
 can insert and extract in logarithmic time.
 Even though an unsorted array can insert in constant time, it take linear
 time to removeMin.
 Likewise, a sorted array can removeMin in constant time but is takes linear
 time to insert a new event.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\align left
(10 points) R-13-3 and R-13-4, p.
 654 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left
\begin_inset Graphics
	filename 4.png
	scale 75

\end_inset


\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Enumerate
\align left
(10 points) R-13.8, p.
 655
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left

\series bold
A.
 Adjacency list.
 
\series default
This is because it would take 
\begin_inset Formula $10^{8}(10,000*10,000)$
\end_inset

 Boolean bits to represent the graph as a adjacency matrix.
 It would take less space to use an adjacency list (enough to hold 20,000
 nodes).
\end_layout

\begin_layout Plain Layout

\series bold
B.
 Adjacency Matrix.
 
\series default
The adjacency matrix would take around 
\begin_inset Formula $4*10^{14}$
\end_inset

 bits which is a lot.
 However, the adjacency list would have to store 20,000,000 edges.
 Depending on how large each node is in the list, the space being used can
 grow very fast with that amount of nodes.
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
C.
 Adjacency Matrix.

\series default
 Since space is not a factor, adjacency matrix would be the best choice
 because it can evaluate isAdjecentTo in constant time.
 On the other hand, the adjacency list would have to iterate through each
 edge adjacent to that vertex.
 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\align left
(10 points) R-13.16, p.
 656
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left

\series bold
Algorithm 
\series default
ShortestPath(G,v)
\end_layout

\begin_layout Plain Layout
Initialize D[v]=0 and D[u] = positive infinity for all u != v.
 
\end_layout

\begin_layout Plain Layout
Priority Queue Que; //contains all vertices of the Graoh G using key as
 the labels
\end_layout

\begin_layout Plain Layout
while(!Queue.empty())
\end_layout

\begin_layout Plain Layout
{
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

u=Que.removeMin() //pull u into cloud
\end_layout

\begin_layout Plain Layout
for each vertex z adjacent to u that has not been visited
\end_layout

\begin_layout Plain Layout
{
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

Update D[z] and display its distance and path
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

if(D[z] > D[u] + w(u,z) )// relax function
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

{
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

D[z] = D[u] + w(u,z) 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

P[z] = u
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

}
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

cout<<
\begin_inset Quotes erd
\end_inset

Distance from 
\begin_inset Quotes eld
\end_inset

 <<v <<
\begin_inset Quotes erd
\end_inset

to
\begin_inset Quotes erd
\end_inset

 <<u <<
\begin_inset Quotes erd
\end_inset

is
\begin_inset Quotes erd
\end_inset

 <<D[z]
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

cout<<
\begin_inset Quotes erd
\end_inset

Path from 
\begin_inset Quotes eld
\end_inset

 <<v <<
\begin_inset Quotes erd
\end_inset

to
\begin_inset Quotes erd
\end_inset

 <<u <<
\begin_inset Quotes erd
\end_inset

is v ->
\begin_inset Quotes erd
\end_inset

 <<z <<
\begin_inset Quotes erd
\end_inset

->u
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
}
\end_layout

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\align left
(10 points) R-13.17, p.
 656
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left
3->5 (115); 1->8( 120); 2->8 (155); 4->5 (160); 5->8 (170); 2->6 (180)
\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Enumerate
\align left
(10 points) You want to help CS/CSE freshman students to prepare their course
 schedules for the first two years in the lower level division.
 By building a directed graph suggest order in which they should schedule
 their courses taking into account their corresponding prerequisites.
 A set of vertices represents courses and a set of edges represents a dependence
 of a given course on a course prerequisite.
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left
\begin_inset Graphics
	filename 8.png
	scale 75

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\align left
(10 points) R-13.31, p.
 656
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left
A tree that contains all vertices in the graph in a straight line.
 In other words, every node, besides the last node, has exactly one child,
 and every node, besides the root, has exactly one parent.
 Like this: a->b->c->d->...->z
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\align left
(10 points) Write what the running time, and provide its justification,
 of the Dijkstra's algorithm is for a sparse and dense graph and the priority
 queue implemented based on
\end_layout

\begin_deeper
\begin_layout Enumerate
\align left
a binary heap
\end_layout

\begin_layout Enumerate
\align left
an unsorted list
\end_layout

\begin_layout Enumerate
\align left
a sorted list
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left
Dijkstra's algorithm: 
\begin_inset Formula $O(n*removeMin())$
\end_inset


\begin_inset Formula $+$
\end_inset


\begin_inset Formula $(m*DecreaseKey())$
\end_inset

 Sparce = n=m.
 Dense=
\begin_inset Formula $n^{2}=m$
\end_inset

.
\end_layout

\begin_layout Plain Layout
A.
 Binary Heap: removeMin = 
\begin_inset Formula $O(log_{2}n)$
\end_inset

, DecreaseKey = 
\begin_inset Formula $O(n)$
\end_inset

 -> 
\begin_inset Formula $O(nlog_{2}n)+(m*n)$
\end_inset

.
\end_layout

\begin_layout Plain Layout
Sparse graph: 
\begin_inset Formula $O(nlog_{2}n)+(n^{2})$
\end_inset

= 
\begin_inset Formula $O(n^{2})$
\end_inset

 without locators and 
\begin_inset Formula $O(nlog_{2}n)$
\end_inset

 with locators.
\end_layout

\begin_layout Plain Layout
Dense graph: 
\begin_inset Formula $O(nlog_{2}n)+(n^{3})$
\end_inset

 = 
\begin_inset Formula $O(n^{3})$
\end_inset

 without locators and 
\begin_inset Formula $O(n^{2}log_{2}n)$
\end_inset

 with locators
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
B.
 Unsorted Graph: removeMin = 
\begin_inset Formula $O(n)$
\end_inset

 and DecreaseKey = 
\begin_inset Formula $O(n)$
\end_inset

 -> 
\begin_inset Formula $O(n*n)+(m*n).$
\end_inset


\end_layout

\begin_layout Plain Layout
Sparse graph: 
\begin_inset Formula $O(n^{2})+(n^{2})$
\end_inset

 = 
\begin_inset Formula $O(n^{2})$
\end_inset

.
\end_layout

\begin_layout Plain Layout
Dense graph: 
\begin_inset Formula $O(n^{2})+(n^{3})$
\end_inset

 = 
\begin_inset Formula $O(n^{3})$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
C.
 Sorted Graph: removeMin = 
\begin_inset Formula $O(1)$
\end_inset

 and DecreaseKey = 
\begin_inset Formula $O(n)$
\end_inset

 -> 
\begin_inset Formula $O(n+m*n).$
\end_inset


\end_layout

\begin_layout Plain Layout
Sparse graph: 
\begin_inset Formula $O(n+n^{2})$
\end_inset

 = 
\begin_inset Formula $O(n^{2})$
\end_inset

.
\end_layout

\begin_layout Plain Layout
Dense graph: 
\begin_inset Formula $O(n+n^{3})$
\end_inset

 = 
\begin_inset Formula $O(n^{3})$
\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\align left
(10 points) C-13.10, p.
 658
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left
For an Euler tour, every vertex needs two sets of edges.
 Two edges that com out from the previous and next vertex in the tour and
 two edges that does in the previous and next vertex in the tour.
 This means the each vertex has two edges going in and out of it.
 Therefore, the number of edges is 2 times the number of nodes meaning m=2n.
 So, 
\begin_inset Formula $O(n+m)$
\end_inset

 = 
\begin_inset Formula $O(n+2n)=O(3n)=O(n)$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\align left
(10 points) C-13.15, p.
 659
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left
\begin_inset Graphics
	filename 12.png
	scale 75

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\align left
(10 points) C-13.18, p.
 659
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
newline$
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left
Using Dijkstra's algorithm we can change the Relax function from if(D[z]
 > D[u] + w(u,z) ) to if(D[z] < D[u] + w(u,z) ).
 This will find the longest path instead of the shortest.
 The running time based on the implementation with a priority queue using
 a binary heap and locators would be 
\begin_inset Formula $O(nlog_{2}n)$
\end_inset

 and 
\begin_inset Formula $O(n^{2})$
\end_inset

 without locators.
 
\end_layout

\begin_layout Plain Layout
\align left

\series bold
Algorithm 
\series default
LongestPath(G,v)
\end_layout

\begin_layout Plain Layout
Initialize D[v]=0 and D[u] = positive infinity for all u != v.
 
\end_layout

\begin_layout Plain Layout
Priority Queue Que; //contains all vertices of the Graph G using key as
 the labels
\end_layout

\begin_layout Plain Layout
while(!Queue.empty())
\end_layout

\begin_layout Plain Layout
{
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

u=Que.removeMin() //pull u into cloud
\end_layout

\begin_layout Plain Layout
for each vetex z adjencent to u that has not been visited
\end_layout

\begin_layout Plain Layout
{
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

if(D[z] < D[u] + w(u,z) )// relax function
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

{
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

D[z] = D[u] + w(u,z) 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

P[z] = u
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
indent$
\end_layout

\end_inset

}
\end_layout

\begin_layout Plain Layout
}
\end_layout

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
