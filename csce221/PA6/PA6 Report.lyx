#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\date{}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans helvet
\font_typewriter courier
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\headheight 0in
\headsep 0in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle empty
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\series bold
\size large
CSCE 221 Assignment 6 Cover Page
\series default
\size default

\begin_inset Newline newline
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
First Name
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Chris
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Comeaux
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

622006681
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
User Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

cmc236
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

cmc236@tamu.edu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more on Aggie Honor System Office website: 
\family typewriter

\begin_inset CommandInset href
LatexCommand href
target "http://aggiehonor.tamu.edu/"

\end_inset


\family default

\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Peer Teacher
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dr.
 Teresa Leyk
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
http://www.cplusplus.com/forum/beginner/89137/
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
http://programmers.stackexchange.com/
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
http://www.cplusplus.com/reference/list/list/erase/
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Standard
\noindent

\emph on
On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Chris
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Comeaux
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4/24/2016
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section*
Assignment 6 Description
\end_layout

\begin_layout Standard
In programming Assignment 6, students had to represent any directed graph
 as a directed acyclic graph (DAG).
 To to this, students had to extract the strongly connected components of
 the graph and represent them as a single vertex.
 In the first part of the program, students had to read in an adjacency
 list, create a graph from the list, and print the graph to the screen (as
 an adjacency list).
 In the second part, students had to run a depth first search on the graph
 to find the search order, create a transpose of the graph, and run the
 depth first search on the transpose.
 Running the depth first search on the transpose will return the strongly
 connected components.
 From there, students had to use the strongly connected components found
 in the last step and create the final acyclic graph.
 
\end_layout

\begin_layout Section*
Implementation
\end_layout

\begin_layout Standard
To implement the notion of a graph I used a STL vector of vertices.
 Each vertex comprised of an edgeList and a label.
 The edgeList was a STL list of edges.
 An edge contained a starting label, end label, a weight, and a visited
 bit.
 The starting label represented the starting node of a directed edge and
 the end label represented the ending node of a directed edge.
 To display the graph to the screen, I outputted the graph as an adjacency
 list in the displayGraph() member function of the Graph class.
 To transpose the graph (reverseGraph(Graph& T)), I visited every edge in
 every vertices' edge list, created a new edge in the corresponding transpose
 graph's vertices edgeList, and reversed the start and finish label.
 The depth first search was implemented through two functions: getDFSOrder
 and getDFSOrder.
 These functions utilized a stack and two vectors.
 One vector held the visited nodes while the other vector held the order
 of nodes starting from the lowest end time stamp to the highest end time
 stamp.
 The stack was used to keep track of the nodes in the current path.
 To create the final DAG, makeSCG(Graph graph, vector<int> order) was called
 on the transpose graph.
 Like the two functions listed above, makeSCG(Graph graph, vector<int> order),
 utilized 2 vectors and one stack implemented in the same manor.
 However, this function had an additional vector of vectors of ints.
 The inner vector each represented one strongly connected component.
 This vector of vector of ints was then used to extract the strongly connected
 components from the original graph and create a new graph with the vertices.
 Finally, the function deleted all edges that did not belong in the DAG,
 checked for any loops, and displayed the graph to the screen.
\end_layout

\begin_layout Section*
C++ Features Used
\end_layout

\begin_layout Standard
I did not use any aspects of generic programming in programming assignment
 6.
 However, I did use some object oriented programming features such as abstractio
n.
 I created 3 objects, a Graph object, a Vertex object, and a Edge object.
 The implementation of Edge was hidden behind the Vertex object and the
 implementation of Vertex was hidden behind the Graph object.
 Each object knew about the class below it but not above it.
 For example, the Graph class knew what a Vertex and Edge was, the Vertex
 class knew what a Edge was but did not know anything about the Graph class,
 and the Edge class did not know anything about the Vertex or Graph classes.
 Another C++ feature was that I used 3 standard library containers in my
 implementation: stack, vector, and list.
 
\end_layout

\begin_layout Section*
Assumptions on Input Data
\end_layout

\begin_layout Standard
There were a few assumptions made on the input data.
 The first assumption was that the input was in the form of an adjacency
 list.
 Furthermore, this adjacency list had to be terminated by a -1 and on a
 separate line.
 Finally, an assumption was made that each number in the list was separated
 by a space.
 A visual representation of these assumptions would be: # # # # -1, where
 # represents any number and is not limited to the number of # listed.
 
\end_layout

\begin_layout Section*
Testing
\end_layout

\begin_layout Standard
\align left
I used three test cases to test my program listed below.
 NOTE: the adjacency list listed under GRAPH is identical to the input data.
 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\series bold
Test1:
\begin_inset ERT
status open

\begin_layout Plain Layout

\series bold
$
\backslash
newline$
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Test1.png

\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
Test 2: 
\begin_inset ERT
status open

\begin_layout Plain Layout

\series bold
$
\backslash
newline$
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Test2.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align left

\series bold
Test 3:
\begin_inset ERT
status open

\begin_layout Plain Layout

\series bold
$
\backslash
newline$
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align left
\begin_inset Graphics
	filename Test3.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section*
Running Time Functions
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\series bold
GRAPH:
\end_layout

\begin_layout Plain Layout

\series bold
buildGraph:
\series default
 O(
\begin_inset Formula $n*m$
\end_inset

) where n is the number of lines in the file and m is the number of characters
 in each line.
 This is because the this function reads in one line at a time then does
 work on each character in each line.
\end_layout

\begin_layout Plain Layout

\series bold
displayGraph: 
\series default
O(
\begin_inset Formula $n*m$
\end_inset

).
 This is because this function loops through every edge and vertex in the
 graph.
 n is the number of vertices and m is the number of edges.
\end_layout

\begin_layout Plain Layout

\series bold
reverseGraph: 
\series default
O(n*m) Like the function above, this function loops through every edge and
 every vertex.
 n is the number of vertices and m is the number of edges.
\end_layout

\begin_layout Plain Layout

\series bold
findLabel: 
\series default
O(n) where n is the number of vertices.
 This function loops through each every vertex and return the index of the
 vertex with the label that was passed to it.
\end_layout

\begin_layout Plain Layout

\series bold
getDFSOrder: 
\series default
O(1) This function is constant because it simply initializes the depth first
 search.
 It first finds the index of the first vertex, add that vertex to the the
 visited vector and vertex stack and then calls vertex traversal.
\end_layout

\begin_layout Plain Layout

\series bold
vertexTraversal: 
\series default
O(n) This function is recursive and continues to call itself as long as
 all vertices have not been visited.
 Since it visits all vertices it is O(n) where n is the number of vertices.
\end_layout

\begin_layout Plain Layout

\series bold
makeSCG:
\series default
 O(n*m) This function, like the other listed above, visits every vertex
 and every edge in the output graph.
 even though it has many loops, its can be bounded by O(n*m) where n is
 the number of vertices in the graph and m is the nuber of edges in the
 graph
\end_layout

\begin_layout Plain Layout

\series bold
VERTEX
\end_layout

\begin_layout Plain Layout

\series bold
reverseEdge: 
\series default
O(n) where n is the number of edges in the edge list.
 This is because this function loops though every node in the edgeList and
 reverses the edge
\end_layout

\begin_layout Plain Layout

\series bold
isVisited: 
\series default
O(n) where n is the number of vertices in the visited vector.
 This function compares the passed value to every number in the vector too
 see if has been visited or not.
\end_layout

\begin_layout Plain Layout

\series bold
isVertex: 
\series default
O(n) where n is the number of vertices in the graph call on.
 This vertex compares the passed label to every label in the vertices vector
 to see if there is a corresponding vertex with that label.
\end_layout

\begin_layout Plain Layout

\series bold
isLoop: 
\series default
O(n*m) where n is the number of vertices in the graph and m is the number
 of edges in the graph.
 This function goes through every vertex's edges and sees if there is any
 type of loop.
 
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Real Life Application 
\end_layout

\begin_layout Standard
One application that this program can be used is when calculating the maximum
 execution time of a set.
 To do this we need to have a DAG of the set in memory.
 Since my program can be used to create a DAG from any directed graph, you
 could pass the original graph to my program, extract the DAG and then pass
 it to another algorithm that calculates the maximum execution time of the
 set.
 
\end_layout

\begin_layout Section*
Conclusion
\end_layout

\begin_layout Standard
Programming assignment 6 taught students about graphs and graph traversals,
 especially depth first search.
 To complete the this assignment students had to understand graphs enough
 to represent a graph in c++ and then write a depth first search to traverse
 the graph.
 Furthermore, the students had to understand what strongly connected components
 were and how to recognize them in graphs to create a DAG from any directed
 graph.
 
\end_layout

\end_body
\end_document
